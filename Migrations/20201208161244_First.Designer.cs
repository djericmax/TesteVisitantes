// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteVisitantes.Models;

namespace TesteVisitantes.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201208161244_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TesteVisitantes.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Depto")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Depto = "Sala"
                        },
                        new
                        {
                            Id = 2,
                            Depto = "Quarto"
                        },
                        new
                        {
                            Id = 3,
                            Depto = "Cozinha"
                        },
                        new
                        {
                            Id = 4,
                            Depto = "Banheiro"
                        },
                        new
                        {
                            Id = 5,
                            Depto = "Garagem"
                        });
                });

            modelBuilder.Entity("TesteVisitantes.Models.Visitante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<DateTime>("HoraChegada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HoraSaida")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Visitantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2020, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartamentoId = 3,
                            Empresa = "Empresa 05",
                            HoraChegada = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraSaida = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Eric Figueiredo"
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2020, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartamentoId = 2,
                            Empresa = "Empresa 04",
                            HoraChegada = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraSaida = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Cristiniane Queiroz"
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2020, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartamentoId = 4,
                            Empresa = "Empresa 03",
                            HoraChegada = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraSaida = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Madalena Puca"
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2020, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartamentoId = 5,
                            Empresa = "Empresa 02",
                            HoraChegada = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraSaida = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Miguel Comitre"
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2020, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartamentoId = 1,
                            Empresa = "Empresa 01",
                            HoraChegada = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraSaida = new DateTime(2020, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Márcia do Celso"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
